{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser"],"mappings":"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ACI6xB,WACD5a,EAASnX,UAAW,eAAY,IACnCE,IACI6xB,WACD5a,EAASnX,UAAW,oBAAiB,IACxCE,IACI6xB,WACD5a,EAASnX,UAAW,gBAAa,IACpCE,IACI6xB,WACD5a,EAASnX,UAAW,wBAAqB,IAC5CE,IACI6xB,WACD5a,EAASnX,UAAW,sBAAmB,IAC1CE,IACI6xB,WACD5a,EAASnX,UAAW,wBAAqB,IAC5CE,IACI6xB,WACD5a,EAASnX,UAAW,mBAAgB,IACvCE,IACI6xB,WACD5a,EAASnX,UAAW,sBAAmB,IAC1CE,IACI6xB,WACD5a,EAASnX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVmW,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,mBAAgB,IACvCE,IACI6xB,WACD5a,EAASnX,UAAW,kBAAe,IACtCE,IACI6xB,WACD5a,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,oBAAiB,IACxCE,IACI6xB,WACD5a,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,oBAAiB,IACxCE,IACI6xB,WACD5a,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,sBAAmB,IAC1CE,IACI6xB,WACD5a,EAASnX,UAAW,mBAAgB,IACvCE,IACI6xB,WACD5a,EAASnX,UAAW,sBAAmB,IAC1CE,IACI6xB,WACD5a,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,kBAAe,IACtCE,IACI6xB,WACD5a,EAASnX,UAAW,eAAY,IACnCE,IACI6xB,WACD5a,EAASnX,UAAW,iBAAc,IACrCE,IACI6xB,WACD5a,EAASnX,UAAW,sBAAmB,IAC1CE,IACI6xB,WACD5a,EAASnX,UAAW,iBAAc,IACrCE,IACI6xB,WACD5a,EAASnX,UAAW,iBAAc,IACrCE,IACI6xB,WACD5a,EAASnX,UAAW,qBAAkB,IACzCE,IACI6xB,WACD5a,EAASnX,UAAW,oBAAiB,IACxCE,IACI6xB,WACD5a,EAAS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"}